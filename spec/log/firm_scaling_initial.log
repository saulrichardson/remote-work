-----------------------------------------------------------------------------------------------------------------------------------------
      name:  <unnamed>
       log:  /Users/saul/Dropbox/Remote Work Startups/main/spec/log/firm_scaling_initial.log
  log type:  text
 opened on:  13 Jun 2025, 09:47:32

. 
. local result_dir "$results/`specname'"

. capture mkdir "`result_dir'"

. 
. 
. 
. capture postclose handle

. tempfile out

. *--- postfile header (main results) -------------------------------------------
. postfile handle ///
>     str8   model_type ///
>     str40  outcome     ///
>     str40  param       ///
>     double coef se pval pre_mean ///
>     double rkf nobs     ///
>     using `out', replace
(file /var/folders/hg/s3xm9w393gxby64_zklmhgbc0000gn/T//S_86562.000001 not found)

. 
. 
. *------------------------------------------------------------------
. *  First-stage results → first_stage_fstats.csv
. *------------------------------------------------------------------
. tempfile out_fs

. capture postclose handle_fs

. postfile handle_fs ///
>     str8   endovar            ///  var3 
>     str40  param              ///  var6 / var4
>     double coef se pval       ///
>     double partialF rkf nobs  ///
>     using `out_fs', replace
(file /var/folders/hg/s3xm9w393gxby64_zklmhgbc0000gn/T//S_86562.000002 not found)

. 
. // 3) Loop over outcomes
. local outcome_vars growth_rate_we

. 
. local fs_done = 0

. 
. foreach y of local outcome_vars {
  2.     di as text "→ Processing `y'"
  3. 
.     summarize `y' if covid == 0, meanonly
  4.     local pre_mean = r(mean)
  5. 
.     // --- OLS ---
.      reghdfe `y' var3 var4,  absorb(firm_id yh) vce(cluster firm_id)
  6.         
.         local N = e(N) 
  7. 
.      foreach p in var3 var4 {
  8.         local b    = _b[`p']
  9.         local se   = _se[`p']
 10.         local t    = `b'/`se'
 11.         local pval = 2*ttail(e(df_r), abs(`t'))
 12.                 post handle ("OLS") ("`y'") ("`p'") ///
>                                         (`b') (`se') (`pval') (`pre_mean') ///
>                                         (.) (`N')                 // dot for rkf, then nobs
 13.     }
 14. 
.     // --- IV (2nd stage) ---
.      ivreghdfe `y' (var3 = var6) var4,           absorb(firm_id yh) vce(cluster firm_id) savefirst
 15. 
.     local rkf   = e(rkf)
 16.         local N = e(N) 
 17. 
.      foreach p in var3 var4 {
 18.         local b    = _b[`p']
 19.         local se   = _se[`p']
 20.         local t    = `b'/`se'
 21.         local pval = 2*ttail(e(df_r), abs(`t'))
 22.                 *--- inside the IV loop -------------------------------------------------------
.                 post handle ("IV") ("`y'") ("`p'") ///
>                                         (`b') (`se') (`pval') (`pre_mean') ///
>                                         (`rkf') (`N')            // rkf, then nobs
 23.     }
 24. 
.     // --- FIRST STAGE: only once on first loop pass ---
.         if !`fs_done' {
 25.                 
.                 matrix FS = e(first)
 26.         local F3 = FS[4,1]
 27. 
.                 /* -------- var3 first stage -------------------------------- */
.                 estimates restore _ivreg2_var3
 28.                 local N_fs = e(N)
 29.                 foreach p in var6 var4 {
 30.                         local b    = _b[`p']
 31.                         local se   = _se[`p']
 32.                         local t    = `b'/`se'
 33.                         local pval = 2*ttail(e(df_r), abs(`t'))
 34. 
.                         post handle_fs ("var3") ("`p'") ///
>                                                         (`b') (`se') (`pval') ///
>                                                         (`F3') (`rkf') (`N_fs')
 35.                 }
 36. 
. 
.                 local fs_done 1
 37.         }
 38. 
. }
→ Processing growth_rate_we
(MWFE estimator converged in 4 iterations)

HDFE Linear regression                            Number of obs   =     41,980
Absorbing 2 HDFE groups                           F(   2,   3507) =      33.18
Statistics robust to heteroskedasticity           Prob > F        =     0.0000
                                                  R-squared       =     0.3483
                                                  Adj R-squared   =     0.2887
                                                  Within R-sq.    =     0.0048
Number of clusters (firm_id) =      3,508         Root MSE        =     0.1853

                            (Std. err. adjusted for 3,508 clusters in firm_id)
------------------------------------------------------------------------------
             |               Robust
growth_rat~e | Coefficient  std. err.      t    P>|t|     [95% conf. interval]
-------------+----------------------------------------------------------------
        var3 |   .0133046   .0052774     2.52   0.012     .0029574    .0236518
        var4 |  -.0604144   .0074171    -8.15   0.000    -.0749567   -.0458722
       _cons |   .0974253   .0013698    71.13   0.000     .0947397    .1001109
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     firm_id |      3508        3508           0    *|
          yh |        12           1          11     |
-----------------------------------------------------+
* = FE nested within cluster; treated as redundant for DoF computation
(MWFE estimator converged in 4 iterations)

Stored estimation results
-------------------------
---------------------------------------------------------------------------
             |           Dependent  Number of        
        Name | Command    variable     param.  Title 
-------------+-------------------------------------------------------------
_ivreg2_var3 | ivreg2         var3          2  First-stage regression: var3
---------------------------------------------------------------------------

IV (2SLS) estimation
--------------------

Estimates efficient for homoskedasticity only
Statistics robust to heteroskedasticity and clustering on firm_id

Number of clusters (firm_id) =    3508                Number of obs =    41980
                                                      F(  2,  3507) =    33.18
                                                      Prob > F      =   0.0000
Total (centered) SS     =   1327.10484                Centered R2   =   0.0047
Total (uncentered) SS   =   1327.10484                Uncentered R2 =   0.0047
Residual SS             =  1320.862865                Root MSE      =    .1774

------------------------------------------------------------------------------
             |               Robust
growth_rat~e | Coefficient  std. err.      t    P>|t|     [95% conf. interval]
-------------+----------------------------------------------------------------
        var3 |   .0223124    .011682     1.91   0.056    -.0005918    .0452165
        var4 |  -.0630002   .0079729    -7.90   0.000    -.0786322   -.0473682
------------------------------------------------------------------------------
Underidentification test (Kleibergen-Paap rk LM statistic):            550.050
                                                   Chi-sq(1) P-val =    0.0000
------------------------------------------------------------------------------
Weak identification test (Cragg-Donald Wald F statistic):              1.1e+04
                         (Kleibergen-Paap rk Wald F statistic):        839.649
Stock-Yogo weak ID test critical values: 10% maximal IV size             16.38
                                         15% maximal IV size              8.96
                                         20% maximal IV size              6.66
                                         25% maximal IV size              5.53
Source: Stock-Yogo (2005).  Reproduced by permission.
NB: Critical values are for Cragg-Donald F statistic and i.i.d. errors.
------------------------------------------------------------------------------
Hansen J statistic (overidentification test of all instruments):         0.000
                                                 (equation exactly identified)
------------------------------------------------------------------------------
Instrumented:         var3
Included instruments: var4
Excluded instruments: var6
Partialled-out:       _cons
                      nb: total SS, model F and R2s are after partialling-out;
                          any small-sample adjustments include partialled-out
                          variables in regressor count K
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     firm_id |      3508        3508           0    *|
          yh |        12           1          11     |
-----------------------------------------------------+
* = FE nested within cluster; treated as redundant for DoF computation
(results _ivreg2_var3 are active now)

. 
. 
. // 4) Close & export to CSV
. postclose handle

. use `out', clear

. export delimited using "`result_dir'/consolidated_results.csv", ///
>     replace delimiter(",") quote
file ../results/raw/firm_scaling_initial/consolidated_results.csv saved

. 
. * --- write first-stage CSV -----------------------------------------
. postclose handle_fs

. use `out_fs', clear

. export delimited using "`result_dir'/first_stage.csv", ///
>         replace delimiter(",") quote
file ../results/raw/firm_scaling_initial/first_stage.csv saved

. 
. di as result "→ second-stage CSV : `result_dir'/consolidated_results.csv"
→ second-stage CSV : ../results/raw/firm_scaling_initial/consolidated_results.csv

. di as result "→ first-stage  CSV : `result_dir'/first_stage.csv"
→ first-stage  CSV : ../results/raw/firm_scaling_initial/first_stage.csv

. 
end of do-file

. do "/Users/saul/Dropbox/Remote Work Startups/main/spec/user_productivity_initial.do"

. *============================================================*
. *  user_productivity_initial.do
. *  — Baseline spec (no startup × remote interaction) for worker
. *    productivity.  Accepts *optional* first argument selecting the user
. *    panel variant (unbalanced | balanced | precovid).  Default = unbalanced.
. *    Example: do user_productivity_initial.do balanced
. *============================================================*
. 
. * Parse variant argument ----------------------------------------------------
. args panel_variant

. if "`panel_variant'" == "" local panel_variant "unbalanced"

. local specname user_productivity_initial_`panel_variant'

. capture log close

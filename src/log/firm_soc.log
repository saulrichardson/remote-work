-----------------------------------------------------------------------------------------------------------------------------------------
      name:  <unnamed>
       log:  /Users/saul/Dropbox/Remote Work Startups/main/src/log/firm_soc.log
  log type:  text
 opened on:  10 Jul 2025, 07:46:16

. 
. local result_dir "$results/`specname'"

. capture mkdir "`result_dir'"

. 
. 
. 
. capture postclose handle

. tempfile out

. *--- postfile header (main results) -------------------------------------------
. postfile handle ///
>     str8   model_type ///
>     str40  outcome     ///
>     str40  param       ///
>     double coef se pval pre_mean ///
>     double rkf nobs     ///
>     using `out', replace
(file /var/folders/hg/s3xm9w393gxby64_zklmhgbc0000gn/T//S_20662.000001 not found)

. 
. 
. *------------------------------------------------------------------
. *  First-stage results → first_stage_fstats.csv
. *------------------------------------------------------------------
. tempfile out_fs

. capture postclose handle_fs

. postfile handle_fs ///
>     str8   endovar            ///  var3 / var5
>     str40  param              ///  var6 / var7 / var4
>     double coef se pval       ///
>     double partialF rkf nobs  ///
>     using `out_fs', replace
(file /var/folders/hg/s3xm9w393gxby64_zklmhgbc0000gn/T//S_20662.000002 not found)

. 
. // 3) Loop over outcomes
. local outcome_vars growth_rate_we join_rate_we leave_rate_we

. 
. local fs_done = 0

. 
. foreach y of local outcome_vars {
  2.     di as text "→ Processing `y'"
  3. 
.     summarize `y' if covid == 0, meanonly
  4.     local pre_mean = r(mean)
  5. 
.     // --- OLS ---
.      reghdfe `y' var3 var5 var4, absorb(firm_id yh) vce(cluster firm_id)
  6.         
.         local N = e(N) 
  7. 
.     foreach p in var3 var5 var4 {
  8.         local b    = _b[`p']
  9.         local se   = _se[`p']
 10.         local t    = `b'/`se'
 11.         local pval = 2*ttail(e(df_r), abs(`t'))
 12.                 post handle ("OLS") ("`y'") ("`p'") ///
>                                         (`b') (`se') (`pval') (`pre_mean') ///
>                                         (.) (`N')                 // dot for rkf, then nobs
 13.     }
 14. 
.     // --- IV (2nd stage) ---
.      ivreghdfe ///
>         `y' (var3 var5 = var6 var7) var4, ///
>         absorb(firm_id yh) vce(cluster firm_id) savefirst
 15. 
.     local rkf   = e(rkf)
 16.         local N = e(N) 
 17. 
.     foreach p in var3 var5 var4 {
 18.         local b    = _b[`p']
 19.         local se   = _se[`p']
 20.         local t    = `b'/`se'
 21.         local pval = 2*ttail(e(df_r), abs(`t'))
 22.                 *--- inside the IV loop -------------------------------------------------------
.                 post handle ("IV") ("`y'") ("`p'") ///
>                                         (`b') (`se') (`pval') (`pre_mean') ///
>                                         (`rkf') (`N')            // rkf, then nobs
 23.     }
 24. 
.     // --- FIRST STAGE: only once on first loop pass ---
.         if !`fs_done' {
 25.                 
.                 matrix FS = e(first)
 26.         local F3 = FS[4,1]
 27.         local F5 = FS[4,2]
 28. 
.                 /* -------- var3 first stage -------------------------------- */
.                 estimates restore _ivreg2_var3
 29.                 local N_fs = e(N)
 30.                 foreach p in var6 var7 var4 {
 31.                         local b    = _b[`p']
 32.                         local se   = _se[`p']
 33.                         local t    = `b'/`se'
 34.                         local pval = 2*ttail(e(df_r), abs(`t'))
 35. 
.                         post handle_fs ("var3") ("`p'") ///
>                                                         (`b') (`se') (`pval') ///
>                                                         (`F3') (`rkf') (`N_fs')
 36.                 }
 37. 
.                 /* -------- var5 first stage -------------------------------- */
.                 estimates restore _ivreg2_var5
 38.                 local N_fs = e(N)
 39.                 foreach p in var6 var7 var4 {
 40.                         local b    = _b[`p']
 41.                         local se   = _se[`p']
 42.                         local t    = `b'/`se'
 43.                         local pval = 2*ttail(e(df_r), abs(`t'))
 44. 
.                         post handle_fs ("var5") ("`p'") ///
>                                                         (`b') (`se') (`pval') ///
>                                                         (`F5') (`rkf') (`N_fs')
 45.                 }
 46. 
.                 local fs_done 1
 47.         }
 48. 
. }
→ Processing growth_rate_we
(dropped 6 singleton observations)
(MWFE estimator converged in 6 iterations)

HDFE Linear regression                            Number of obs   =  2,809,984
Absorbing 2 HDFE groups                           F(   3,   3793) =      22.95
Statistics robust to heteroskedasticity           Prob > F        =     0.0000
                                                  R-squared       =     0.0561
                                                  Adj R-squared   =     0.0548
                                                  Within R-sq.    =     0.0002
Number of clusters (firm_id) =      3,794         Root MSE        =     0.2245

                            (Std. err. adjusted for 3,794 clusters in firm_id)
------------------------------------------------------------------------------
             |               Robust
growth_ra~we | Coefficient  std. err.      t    P>|t|     [95% conf. interval]
-------------+----------------------------------------------------------------
        var3 |     .02197   .0027089     8.11   0.000     .0166589    .0272812
        var5 |   .0044764   .0157549     0.28   0.776    -.0264124    .0353653
        var4 |  -.0151927   .0145511    -1.04   0.297    -.0437214    .0133359
       _cons |    .080607   .0002559   315.03   0.000     .0801053    .0811087
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     firm_id |      3794        3794           0    *|
          yh |       126           1         125     |
-----------------------------------------------------+
* = FE nested within cluster; treated as redundant for DoF computation
(dropped 6 singleton observations)
--Break--
r(1);

end of do-file

--Break--
r(1);

. do "/Users/saul/Dropbox/Remote Work Startups/main/src/build_firm_soc_panel_from_csv.do"

. ********************************************************************************
. *  build_firm_soc_panel_from_csv.do
. *  Create company × SOC-4 × half-year panel for regressions
. *  starting from firm_occ_panel_enriched.csv (produced by the Python build).
. ********************************************************************************
. 
. // ---------------------------------------------------------------------------
. // 0) Globals & log setup
. // ---------------------------------------------------------------------------
. 
. do "globals.do"

. global raw_data "../data/raw"

. global processed_data  "../data/processed"

. global results "../results/raw"

. global clean_results "../results/cleaned"

. 
. 
. 
. 
. 
end of do-file

. 
. capture log close

#!/usr/bin/env python3
"""
Plot engineer-hire IRFs (growth_rate_we → ΔEngineer per 100 pre-shock) for
each Remote×Startup group and produce combined figures:
  - Absolute combined (no rebasing) with a shared y-axis
  - Rebased combined (β0 set to 0) with a shared y-axis
Also emit a small LaTeX table of H0 (contemporaneous) coefficients.

Inputs:
  results/firm_irfs_engineer_hires/<group>/irf_results.csv
  results/firm_irfs_engineer_hires/<group>/irf_results_rebased.csv

Outputs:
  results/firm_irfs_engineer_hires/combined_irf_absolute.png
  results/firm_irfs_engineer_hires/combined_irf_rebased.png
  results/firm_irfs_engineer_hires/beta0_table.tex

Groups:
  - remote0_startup0 → "Non-Remote, Non-Startup"
  - remote1_startup0 → "Remote, Non-Startup"
  - remote0_startup1 → "Non-Remote, Startup"
  - remote1_startup1 → "Remote, Startup"
"""

import os
import pandas as pd
import matplotlib.pyplot as plt

BASE = os.path.abspath(os.path.join(os.path.dirname(__file__), '..'))
RES_ROOT = os.path.join(BASE, 'results', 'firm_irfs_engineer_hires')

GROUPS = {
    'remote0_startup0': 'Non-Remote, Non-Startup',
    'remote1_startup0': 'Remote, Non-Startup',
    'remote0_startup1': 'Non-Remote, Startup',
    'remote1_startup1': 'Remote, Startup',
}

def load_csv(path):
    if not os.path.exists(path):
        return None
    df = pd.read_csv(path)
    for c in df.columns:
        if c in {'horizon','coef','ci_lo','ci_hi','coef_rebased','ci_lo_rebased','ci_hi_rebased'}:
            df[c] = pd.to_numeric(df[c], errors='coerce')
    return df

def write_beta0_table(rows, out_tex):
    # rows: list of (label, beta0, se0)
    with open(out_tex, 'w') as f:
        f.write('% Auto-generated by plot_engineer_hires_irfs_remote_startup.py\n')
        f.write('\\begin{tabular}{lrr}\\toprule\n')
        f.write('Group & $\\hat{\\beta}_0$ & SE \\\\ \\midrule\n')
        for label, b0, se0 in rows:
            if b0 is None:
                f.write(f'{label} &  &  \\\\ \n')
            else:
                se_str = '' if se0 is None else f'{se0:.2f}'
                f.write(f'{label} & {b0:.2f} & {se_str} \\\\ \n')
        f.write('\\bottomrule\\end{tabular}\n')
    print(f"[OK] Wrote {out_tex}")

def main():
    os.makedirs(RES_ROOT, exist_ok=True)
    order = ['remote0_startup0', 'remote1_startup0', 'remote0_startup1', 'remote1_startup1']

    # Load rebased series and collect global y-range
    series = {}
    ymin, ymax = None, None
    beta0_rows = []
    for g in order:
        label = GROUPS[g]
        gdir = os.path.join(RES_ROOT, g)
        rb_csv = os.path.join(gdir, 'irf_results_rebased.csv')
        df_rb = load_csv(rb_csv)
        if df_rb is None:
            print(f"[WARN] Missing rebased CSV: {rb_csv}")
        else:
            df_rb = df_rb.dropna(subset=['horizon', 'coef_rebased'])
            df_rb = df_rb.sort_values('horizon')
            series[g] = (label, df_rb)
            lo_min = df_rb['ci_lo_rebased'].min()
            hi_max = df_rb['ci_hi_rebased'].max()
            ymin = lo_min if ymin is None else min(ymin, lo_min)
            ymax = hi_max if ymax is None else max(ymax, hi_max)

        # Grab beta0 from original
        base_csv = os.path.join(gdir, 'irf_results.csv')
        df0 = load_csv(base_csv)
        b0 = se0 = None
        if df0 is not None and not df0.empty:
            row0 = df0.loc[df0['horizon'] == 0]
            if not row0.empty:
                b0 = float(row0['coef'].iloc[0]) if pd.notnull(row0['coef'].iloc[0]) else None
                se0 = float(row0['se'].iloc[0]) if pd.notnull(row0['se'].iloc[0]) else None
        beta0_rows.append((label, b0, se0))

    # Combined 2×2 plot (shared y-axis)
    if not series:
        print('[INFO] No data for combined plot.')
    else:
        fig, axes = plt.subplots(2, 2, figsize=(12, 9), sharex=True)
        axes = axes.flatten()
        for ax, g in zip(axes, order):
            if g not in series:
                ax.axis('off')
                continue
            label, df = series[g]
            ax.axhline(0.0, color='gray', linestyle='--', linewidth=1)
            ax.errorbar(
                df['horizon'], df['coef_rebased'],
                yerr=[df['coef_rebased'] - df['ci_lo_rebased'], df['ci_hi_rebased'] - df['coef_rebased']],
                fmt='o-', color='navy', ecolor='lightgray', elinewidth=2, capsize=4, markersize=5
            )
            ax.set_title(f'{label} (rebased)')
            ax.set_ylim(ymin, ymax)
            ax.grid(axis='y', alpha=0.15)
        for ax in axes:
            ax.set_xlabel('Horizon (6-month periods)')
        axes[0].set_ylabel('Rebased Δ Eng per 100')
        axes[2].set_ylabel('Rebased Δ Eng per 100')
        fig.suptitle('Engineer Hire IRFs (Rebased, Shared Y)')
        fig.tight_layout(rect=[0,0,1,0.96])
        out_png = os.path.join(RES_ROOT, 'combined_irf_rebased.png')
        fig.savefig(out_png, dpi=120)
        plt.close(fig)
        print(f"[OK] {out_png}")

    # Absolute combined 2×2 plot (no rebasing), shared y-axis
    series_abs = {}
    ymin_abs, ymax_abs = None, None
    for g in order:
        label = GROUPS[g]
        gdir = os.path.join(RES_ROOT, g)
        base_csv = os.path.join(gdir, 'irf_results.csv')
        df = load_csv(base_csv)
        if df is None:
            print(f"[WARN] Missing absolute CSV: {base_csv}")
            continue
        df = df.dropna(subset=['horizon', 'coef'])
        df = df.sort_values('horizon')
        series_abs[g] = (label, df)
        lo_min = df['ci_lo'].min()
        hi_max = df['ci_hi'].max()
        ymin_abs = lo_min if ymin_abs is None else min(ymin_abs, lo_min)
        ymax_abs = hi_max if ymax_abs is None else max(ymax_abs, hi_max)

    if series_abs:
        fig, axes = plt.subplots(2, 2, figsize=(12, 9), sharex=True)
        axes = axes.flatten()
        for ax, g in zip(axes, order):
            if g not in series_abs:
                ax.axis('off')
                continue
            label, df = series_abs[g]
            # Reference line at 0
            ax.axhline(0.0, color='gray', linestyle='--', linewidth=1)
            ax.errorbar(
                df['horizon'], df['coef'],
                yerr=[df['coef'] - df['ci_lo'], df['ci_hi'] - df['coef']],
                fmt='o-', color='navy', ecolor='lightgray', elinewidth=2, capsize=4, markersize=5
            )
            ax.set_title(f'{label} (absolute)')
            ax.set_ylim(ymin_abs, ymax_abs)
            ax.grid(axis='y', alpha=0.15)
        for ax in axes:
            ax.set_xlabel('Horizon (6-month periods)')
        axes[0].set_ylabel('Δ Eng per 100')
        axes[2].set_ylabel('Δ Eng per 100')
        fig.suptitle('Engineer Hire IRFs (Absolute, Shared Y)')
        fig.tight_layout(rect=[0,0,1,0.96])
        out_abs = os.path.join(RES_ROOT, 'combined_irf_absolute.png')
        fig.savefig(out_abs, dpi=120)
        plt.close(fig)
        print(f"[OK] {out_abs}")

    # Beta0 table for LaTeX
    write_beta0_table(beta0_rows, os.path.join(RES_ROOT, 'beta0_table.tex'))

if __name__ == '__main__':
    main()
